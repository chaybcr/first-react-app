{"version":3,"sources":["components/Chart/Chart.module.css","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["module","exports","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeYearSelect","target","ChartBar","barfillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","data","totalMaxvalue","max","styles","chart","dataPoint","ExpensesChart","chartDatapoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onHideForm","NewExpense","showForm","setShowForm","enteredExpenseData","random","onAddExpense","Dummy_Expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e2e9ea5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__HlTbn\"};","import './ExpenseDate.css'\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month:'short'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date_month\">{month}</div>\r\n        <div className=\"expense-date_day\">{day}</div>\r\n        <div className=\"expense-date_year\">{year}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css'\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React, {useState} from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nfunction ExpenseItem(props){\r\n   const [title,setTitle] = useState(props.title);\r\n    const clickHandler = ()=>{\r\n        setTitle('Updated')\r\n        console.log('clicked')\r\n    }\r\n\r\n    return(\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n            <h2>{title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem';\r\nconst ExpensesList = (props) =>{\r\n    if(props.filteredExpenses.length === 0){\r\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n    }\r\n\r\n    return(\r\n        <ul className=\"expenses-list\">\r\n         {props.filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) =>{\r\n    props.onChangeYearSelect(event.target.value)\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css'\r\n\r\nconst ChartBar = (props)=>{\r\n    let barfillHeight = '0%';\r\n    if(props.maxValue > 0){\r\n        barfillHeight = Math.round((props.value/props.maxValue)* 100) + '%';\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:barfillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport styles from  \"./Chart.module.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(data=> data.value);\r\n    const totalMaxvalue= Math.max(...dataPointValues);\r\n  return (\r\n    <div className={styles.chart}>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar \r\n        key={dataPoint.label}\r\n        value={dataPoint.value}\r\n        maxValue={totalMaxvalue}\r\n        label={dataPoint.label} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDatapoints = [\r\n      { label: \"Jan\", value: 0 },\r\n      { label: \"Feb\", value: 0 },\r\n      { label: \"Mar\", value: 0 },\r\n      { label: \"Apr\", value: 0 },\r\n      { label: \"May\", value: 0 },\r\n      { label: \"Jun\", value: 0 },\r\n      { label: \"Jul\", value: 0 },\r\n      { label: \"Aug\", value: 0 },\r\n      { label: \"Sep\", value: 0 },\r\n      { label: \"Oct\", value: 0 },\r\n      { label: \"Nov\", value: 0 },\r\n      { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDatapoints[expenseMonth].value += expense.amount;\r\n    }\r\n  return <Chart dataPoints={chartDatapoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpenesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const yearChangehandler = (year) => {\r\n    setFilteredYear(year);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) =>{\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeYearSelect={yearChangehandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList filteredExpenses={filteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) =>{\r\nconst [enteredTitle,setEnteredTitle] = useState('')\r\nconst [enteredAmount,setEnteredAmount] = useState('')\r\nconst [enteredDate,setEnteredDate] = useState('')\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTitle(event.target.value)\r\n    };\r\n\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value)\r\n    };\r\n\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value)\r\n    };\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const expenseData ={\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return(\r\n        <form onSubmit = {submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" value={enteredAmount}  min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onHideForm}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setShowForm(false);\r\n  };\r\n  const showFormHandler = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  const hideFormHandler = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"new-expense\">\r\n        {!showForm && (\r\n          <button onClick={showFormHandler}>Add New Expense</button>\r\n        )}\r\n        {showForm && (\r\n          <ExpenseForm\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n            onHideForm={hideFormHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst Dummy_Expenses = [\r\n  {\r\n    id: 'e1',\r\n    title: 'Accessories',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n]\r\nconst App =() => {\r\n \r\nconst [expenses,setExpenses] = useState(Dummy_Expenses);\r\n  const addExpenseHandler = (expense) =>{\r\n    setExpenses((prevExpenses)=>{\r\n      return [expense, ...prevExpenses];\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense = {addExpenseHandler} />\r\n      <Expenses expenses={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}